import*as t from"dotenv";t.config();let o="https://api.github.com",e=t=>Buffer.from(t).toString("base64"),r=t=>Buffer.from(t,"base64").toString("utf-8"),n=async(t,r,n,i="Update JSON file")=>{try{let a;try{let e=await fetch(`${o}/repos/${n.owner}/${n.repo}/contents/${t}`,{headers:{Authorization:`token ${n.token}`,"Content-Type":"application/json"}});e.ok&&(a=(await e.json()).sha)}catch(t){}let s=await fetch(`${o}/repos/${n.owner}/${n.repo}/contents/${t}`,{method:"PUT",headers:{Authorization:`token ${n.token}`,"Content-Type":"application/json"},body:JSON.stringify({message:i,content:e(JSON.stringify(r,null,2)),sha:a})});if(!s.ok)throw Error(`GitHub API error: ${s.statusText}`);return await s.json()}catch(t){throw console.error("Error uploading to GitHub:",t),t}},i=async(t,e)=>{try{let n=await fetch(`${o}/repos/${e.owner}/${e.repo}/contents/${t}`,{headers:{Authorization:`token ${e.token}`,"Content-Type":"application/json"}});if(!n.ok)throw Error(`GitHub API error: ${n.statusText}`);let i=await n.json(),a=r(i.content);return JSON.parse(a)}catch(t){throw console.error("Error reading from GitHub:",t),t}},a=async(t="",e)=>{try{let r=await fetch(`${o}/repos/${e.owner}/${e.repo}/contents/${t}`,{headers:{Authorization:`token ${e.token}`,"Content-Type":"application/json"}});if(!r.ok)throw Error(`GitHub API error: ${r.statusText}`);return(await r.json()).filter(t=>"file"===t.type)}catch(t){throw console.error("Error listing files from GitHub:",t),t}},s=async(t,e,r="Delete file")=>{try{let n=await fetch(`${o}/repos/${e.owner}/${e.repo}/contents/${t}`,{headers:{Authorization:`token ${e.token}`,"Content-Type":"application/json"}});if(!n.ok)throw Error(`GitHub API error: ${n.statusText}`);let i=await n.json(),a=await fetch(`${o}/repos/${e.owner}/${e.repo}/contents/${t}`,{method:"DELETE",headers:{Authorization:`token ${e.token}`,"Content-Type":"application/json"},body:JSON.stringify({message:r,sha:i.sha})});if(!a.ok)throw Error(`GitHub API error: ${a.statusText}`);return await a.json()}catch(t){throw console.error("Error deleting file from GitHub:",t),t}};export{n as uploadJsonToGithub,i as readJsonFromGithub,a as listFilesInDirectory,s as deleteFileFromGithub};